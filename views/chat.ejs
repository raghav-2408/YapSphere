<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="shortcut icon" href="/logo1.png" type="image/x-icon">
    <title>Welcome!</title>

    <!-- Poppins font -->
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Poppins:ital,wght@0,100;0,200;0,300;0,400;0,500;0,600;0,700;0,800;0,900;1,100;1,200;1,300;1,400;1,500;1,600;1,700;1,800;1,900&display=swap" rel="stylesheet">

    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet">
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js"></script>
    <script src="https://kit.fontawesome.com/66fed9d98a.js" crossorigin="anonymous"></script>
    <script src="/socket.io/socket.io.js"></script>
    <style>
        body {
            background-color: #E5E5E5;
            font-family: "Poppins", sans-serif;
            font-weight: 400;
            font-style: normal;
            }

        .container {
            position: relative;
            top: 20px;
            margin: auto;
            background-color: white;
            width: 90%;
            max-width: 1300px;
            height: 680px;
            display: flex;
            flex-direction: column;
            justify-content: space-between;
            padding: 20px;
            box-shadow: 0px 4px 18px 19px rgba(0, 0, 0, 0.1);
            border-radius: 8px;
        }

        .mainChat {
            background-color: rgb(246, 246, 247);
            width: 100%;
            height: 550px;
            border: 1px solid grey;
            overflow-y: auto;
            padding: 10px;
            margin-bottom: 10px;
            border-radius: 13px;
            display: flex;
            flex-direction: column;
            justify-content: flex-start;
            word-wrap: break-word;
        }

        .chatSection {
            background: white;
            width: auto;
            border-radius: 6px;
            font-size: 16px;
            margin-top: 8px;
            padding: 7px;
            display: inline-block;
            max-width: 60%;
            word-wrap: break-word;
            overflow-wrap: break-word;
        }

        .chatSection.user-message {
            background-color: #037501;
            /* background-color: #D7FFD7; */
            align-self: flex-end;
            border-radius: 20px;
            color: white;
        }

        .chatSection.other-message {
            background-color: #181863;
            /* background-color: #E3F2FD; */
            color: white;
            align-self: flex-start;
            border-radius: 20px;
        }

        .inputSec {
            display: flex;
            align-items: center;
            margin-top: 10px;
        }

        .inputSec input {
            flex: 1;
            border-radius: 20px;
            padding: 10px;
            border: 2px solid #ddd;
            outline: none;
        }

        .inputSec button {
            margin-left: 10px;
            border-radius: 50%;
            padding: 10px 15px;
            background-color: #060694;
            color: white;
            transition: background-color 0.2s ease;
        }

        .inputSec button:hover {
            background-color: #050572;
        }

        #welcomeMessage {
            text-align: center;
            font-size: 25px;
            letter-spacing: 0px;
            font-weight: 700;
        }

        .title {
            display: flex;
            justify-content: space-between;
            align-items: center;
        }

        img {
            width: 50px;
            height: 50px;
        }

        .btn:hover {
            background-color: #050572;
            color: white;
        }

        /* Scrollbar styling */
        ::-webkit-scrollbar {
            width: 3px;
            height: 1px;
        }

        ::-webkit-scrollbar-track {
            background: transparent;
        }

        ::-webkit-scrollbar-thumb {
            background-color: #bcbaba;
            border-radius: 65px;
        }

        ::-webkit-scrollbar-thumb:hover {
            background-color: #555;
        }

        small {
            position: relative;
            padding: 10px;
            font-size: 11px;
            top: 2px;
        }

        #tick {
            font-size: 12px;
        }

        .username{
            color: #f57b66;
            font-weight: bold;
        }

        #logout{
            font-size: 12px;
            letter-spacing: 1px;
        }
        #logout:hover{
            border: none;
            font-size: 11px;
            letter-spacing: 1px;
        }

        /* Media query for smaller screens */
        @media (max-width: 768px) {
            .container {
                height: auto;
                width: 100%;
                padding: 15px;
            }

            .mainChat {
                height: 400px;
            }

            .inputSec button {
                padding: 8px 12px;
            }

            .chatSection {
                max-width: 80%;
            }
        }

        /* Media query for very small devices (like mobile phones) */
        @media (max-width: 480px) {
            .container {
                height: auto;
                width: 100%;
                padding: 10px;
            }

            .mainChat {
                height: 300px;
            }

            .inputSec input {
                font-size: 14px;
            }

            .inputSec button {
                padding: 6px 10px;
            }

            #welcomeMessage {
                font-size: 16px;
            }

            .chatSection {
                font-size: 14px;
                max-width: 90%;
            }
        }

    
    </style>
</head>
<body>
    <div class="container">
        <div class="title">
            <img src="/logo1.png" alt="" class="my-3"/>
            <h4 id="welcomeMessage">Yo <%= username %>! ðŸ‘‹ </h4>
            <a href="/logout" class="btn btn-danger" id = "logout">Logout <i class="fa-solid fa-right-from-bracket mx-1"></i></a>
        </div>

        <div class="mainChat" id="mainChat"></div>

        <div class="inputSec">
            <input class="form-control" id="userInput" type="text" placeholder="Type something here...">
            <button class="btn" id="sendButton">
                <i class="fa-solid fa-arrow-up"></i>
            </button>
        </div>
    </div>

    <script>
        const username = '<%= username %>';
        const socket = io();

        function appendMessageToChat(message) {
            const messageElement = document.createElement('div');
            const formattedTime = formatTimestamp(message.timestamp);

            messageElement.innerHTML = `<i class="fa-solid fa-circle-user mx-2"></i> ${message.user} : <br> ${message.content} <small>${formattedTime}</small>`;
            messageElement.className = message.user === username ? 'chatSection user-message' : 'chatSection other-message';

            document.getElementById('mainChat').appendChild(messageElement);
            const mainChat = document.getElementById('mainChat');
            mainChat.scrollTop = mainChat.scrollHeight;
        }

        async function sendMessageToServer(message) {
            try {
                await fetch('/messages', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify(message)
                });
            } catch (error) {
                console.error('Error sending message:', error);
            }
        }

        function formatTimestamp(timestamp) {
            const date = new Date(timestamp);
            return date.toLocaleTimeString('en-US', {
                hour: 'numeric',
                minute: 'numeric',
                hour12: true
            });
        }

        socket.on('newMessage', (message) => {
            const messageElement = document.createElement('div');
            const formattedTime = formatTimestamp(message.timestamp);

            if (message.user === username) {
                messageElement.className = 'chatSection user-message';
                messageElement.innerHTML = `<i class="fa-solid fa-circle-user mx-2"></i> ${message.content} <small>${formattedTime}</small> <i class="fa-solid fa-check" id="tick"></i>`;
            } else {
                messageElement.className = 'chatSection other-message';
                messageElement.innerHTML = `<i class="fa-solid fa-circle-user mx-2"></i> <span class = "username">${message.user} </span>  <br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ${message.content} <small>${formattedTime}</small>`;
            }

            document.getElementById('mainChat').appendChild(messageElement);
            const mainChat = document.getElementById('mainChat');
            mainChat.scrollTop = mainChat.scrollHeight;
        });

        document.getElementById('sendButton').addEventListener('click', async function() {
            const userInput = document.getElementById('userInput');
            const message = userInput.value.trim();

            if (message !== '') {
                try {
                    await fetch('/messages', {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json'
                        },
                        body: JSON.stringify({
                            content: message,
                            user: username
                        })
                    });
                    userInput.value = '';
                    userInput.focus();
                } catch (error) {
                    console.error('Error sending message:', error);
                }
            }
        });

        document.getElementById('userInput').addEventListener('keypress', function(event) {
            if (event.key === 'Enter') {
                event.preventDefault();
                document.getElementById('sendButton').click();
            }
        });

        async function fetchMessages() {
            try {
                const response = await fetch('/messages');
                if (!response.ok) throw new Error('Network response was not ok.');
                const messages = await response.json();
                const mainChat = document.getElementById('mainChat');
                mainChat.innerHTML = '';
                messages.forEach(message => {
                    const messageElement = document.createElement('div');
                    const formattedTime = formatTimestamp(message.timestamp);

                    if (message.user === username) {
                        messageElement.innerHTML = `<i class="fa-solid fa-circle-user mx-2"></i> ${message.content} <small>${formattedTime}</small> <i class="fa-solid fa-check" id="tick"></i>`;
                        messageElement.className = 'chatSection user-message';
                    } else {
                        messageElement.innerHTML = `<i class="fa-solid fa-circle-user mx-2"></i>  <span class = "username">${message.user}</span> <br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ${message.content} <small>${formattedTime}</small>`;
                        messageElement.className = 'chatSection other-message';
                    }

                    mainChat.appendChild(messageElement);
                });
                mainChat.scrollTop = mainChat.scrollHeight;
            } catch (error) {
                console.error('Error fetching messages:', error);
            }
        }

        fetchMessages();
    </script>
</body>
</html>
